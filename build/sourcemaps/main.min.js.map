{"version":3,"sources":["01_main.js"],"names":["swiper","Swiper","loop","speed","autoplay","daley","navigation","nextEl","prevEl","effect","grabCursor","centeredSlides","slidesPerView","breakpoints","320","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","420","480","560","576","1200","pagination","el","clickable","informationLeftSwiperPagination","document","querySelectorAll","forEach","elem","innerHTML","selector","querySelector","im","Inputmask","mask","validateForms","rules","successMpdal","yaGoal","window","JustValidate","messages","colorWrong","submitHandler","form","formData","FormData","fetch","method","body","then","sayThankYou","reset","catch","console","log","validateRules","name","required","minLength","maxLength","phone","function","value","inputmask","unmaskedvalue","Number","length","headerRightFormInput","onblur","classList","add","remove","informationRow","informationChildren","children","draggable","index","addEventListener","target","closest","preventDefault","elementEnter","activeElement","after"],"mappings":"AAAA,MAAMA,OAAS,IAAIC,OAAO,2BAA4B,CACnDC,MAAM,EACNC,MAAO,IACPC,SAAU,CACPC,MAAO,KAEVC,WAAY,CACTC,OAAQ,sBACRC,OAAQ,uBAEXC,OAAQ,YACRC,YAAY,EACZC,gBAAgB,EAChBC,cAAe,OACfC,YAAa,CACVC,IAAK,CACFC,gBAAiB,CACdC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAc,IAGpBC,IAAK,CACFN,gBAAiB,CACdC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAc,IAGpBE,IAAK,CACFP,gBAAiB,CACdC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAc,IAGpBG,IAAK,CACFR,gBAAiB,CACdC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAc,IAGpBI,IAAK,CACFT,gBAAiB,CACdC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAc,IAGpBK,KAAM,CACHV,gBAAiB,CACdC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAc,KAIvBM,WAAY,CACTC,GAAI,sCACJC,WAAW,KAIXC,gCAAkCC,SAASC,iBAAiB,4CAClEF,gCAAgCG,QAAQC,IACrCA,EAAKC,UAAY,6HAIpB,IAAIC,SAAWL,SAASM,cAAc,UAElCC,GAAK,IAAIC,UAAU,sBACvBD,GAAGE,KAAKJ,UAGR,IAAIK,cAAgB,SAAUL,EAAUM,EAAOC,EAAcC,GAC1D,IAAIC,OAAOC,aAAaV,EAAU,CAC/BM,MAAOA,EAAMA,MACbK,SAAUL,EAAMK,SAChBC,WAAYN,EAAMM,WAClBC,cAAe,SAAUC,GACtB,IAAIC,EAAW,IAAIC,SAASF,GAC5BG,MAAM,WAAY,CACfC,OAAQ,OACRC,KAAMJ,IACNK,KAAK,KACLC,cACAP,EAAKQ,UAEJC,MAAM,KACJC,QAAQC,IAAI,eAM3B,MAAMC,cAAgB,CACnBpB,MAAO,CACJqB,KAAM,CACHC,UAAU,EACVC,UAAW,EACXC,UAAW,IAEdC,MAAO,CACJH,UAAU,EACVI,SAAU,CAACL,EAAMM,KACd,MAAMF,EAAQ/B,SAASkC,UAAUC,gBACjC,OAAOC,OAAOL,IAA2B,KAAjBA,EAAMM,UAIvC1B,SAAU,CACPgB,KAAM,2CACNI,MAAO,qCAEVnB,WAAY,WAGfP,cAAc,qBAAsBqB,eAIpC,MAAMY,qBAAuB3C,SAASC,iBAAiB,4BAEvD0C,qBAAqBzC,QAAQC,IAC1BA,EAAKyC,OAAS,WACMzC,EAAKmC,MACCnC,EAAK0C,UAAUC,IAAI,UAAY3C,EAAK0C,UAAUE,OAAO,aAMlF,MAAMC,eAAiBhD,SAASM,cAAc,wBACxC2C,oBAAsBD,eAAe/C,iBAAiB,yBAE5D,IAAK,MAAMiD,KAAYD,oBACpBC,EAASC,WAAY,EAIxBF,oBAAoB/C,QAAQ,CAACC,EAAMiD,KAChCjD,EAAKkD,iBAAiB,YAAcxD,IACjCA,EAAGyD,OAAOC,QAAQ,yBAAyBV,UAAUC,IAAI,YAE5D3C,EAAKkD,iBAAiB,UAAYxD,IAC/BA,EAAGyD,OAAOC,QAAQ,yBAAyBV,UAAUE,OAAO,cAMlEC,eAAeK,iBAAiB,WAAaxD,IAC1CA,EAAG2D,mBAGNR,eAAeK,iBAAiB,YAAcxD,IAC3C,IAAI4D,EAAe5D,EAAGyD,OAAOC,QAAQ,yBACjCG,EAAgB1D,SAASM,cAAc,WAEtB,OAAjBmD,GACDA,EAAaE,MAAMD","file":"../js/main.min.js","sourcesContent":["const swiper = new Swiper('.information-left-swiper', {\n   loop: true,\n   speed: 800,\n   autoplay: {\n      daley: 3000\n   },\n   navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n   },\n   effect: \"coverflow\",\n   grabCursor: true,\n   centeredSlides: true,\n   slidesPerView: \"auto\",\n   breakpoints: {\n      320: {\n         coverflowEffect: {\n            rotate: 0,\n            stretch: 100,\n            depth: 100,\n            modifier: 3,\n            slideShadows: false,\n         },\n      },\n      420: {\n         coverflowEffect: {\n            rotate: 0,\n            stretch: 120,\n            depth: 100,\n            modifier: 3,\n            slideShadows: false,\n         },\n      },\n      480: {\n         coverflowEffect: {\n            rotate: 0,\n            stretch: 140,\n            depth: 100,\n            modifier: 3,\n            slideShadows: false,\n         },\n      },\n      560: {\n         coverflowEffect: {\n            rotate: 0,\n            stretch: 160,\n            depth: 100,\n            modifier: 3,\n            slideShadows: false,\n         },\n      },\n      576: {\n         coverflowEffect: {\n            rotate: 0,\n            stretch: 120,\n            depth: 100,\n            modifier: 3,\n            slideShadows: false,\n         },\n      },\n      1200: {\n         coverflowEffect: {\n            rotate: 0,\n            stretch: 100,\n            depth: 100,\n            modifier: 3,\n            slideShadows: false,\n         },\n      }\n   },\n   pagination: {\n      el: \".information-left-swiper-pagination\",\n      clickable: true\n   }\n});\n\nconst informationLeftSwiperPagination = document.querySelectorAll('.information-left-swiper-pagination span');\ninformationLeftSwiperPagination.forEach(elem => {\n   elem.innerHTML = '<svg class=\"spinner\" viewBox=\"0 0 50 50\"><circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"3\"></svg>'\n});\n\n// input mask\nvar selector = document.querySelector(\"#phone\");\n\nvar im = new Inputmask(\"+7 (999) 999 99 99\");\nim.mask(selector);\n\n// validate forms\nlet validateForms = function (selector, rules, successMpdal, yaGoal) {\n   new window.JustValidate(selector, {\n      rules: rules.rules,\n      messages: rules.messages,\n      colorWrong: rules.colorWrong,\n      submitHandler: function (form) {\n         let formData = new FormData(form);\n         fetch('mail.php', {\n            method: 'POST',\n            body: formData\n         }).then(() => {\n            sayThankYou();\n            form.reset();\n         })\n            .catch(() => {\n               console.log('Error')\n            });\n      }\n   });\n}\n\nconst validateRules = {\n   rules: {\n      name: {\n         required: true,\n         minLength: 2,\n         maxLength: 30\n      },\n      phone: {\n         required: true,\n         function: (name, value) => {\n            const phone = selector.inputmask.unmaskedvalue()\n            return Number(phone) && phone.length === 10\n         }\n      },\n   },\n   messages: {\n      name: 'Имя должно содержать от 2 до 30 символов',\n      phone: 'Введите корректный номер телефона'\n   },\n   colorWrong: '#D11616'\n};\n\nvalidateForms('.header-right-form', validateRules);\n\n\n// save input value\nconst headerRightFormInput = document.querySelectorAll('.header-right-form-input');\n\nheaderRightFormInput.forEach(elem => {\n   elem.onblur = function () {\n      let phoneValue = elem.value;\n      let a = (phoneValue) ? elem.classList.add('_value') : elem.classList.remove('_value');\n   };\n})\n\n\n// drag and drop\nconst informationRow = document.querySelector('.information-section');\nconst informationChildren = informationRow.querySelectorAll('.information-children');\n\nfor (const children of informationChildren) {\n   children.draggable = true;\n}\n\n\ninformationChildren.forEach((elem, index) => {\n   elem.addEventListener('dragstart', (el) => {\n      el.target.closest('.information-children').classList.add('select');\n   });\n   elem.addEventListener('dragend', (el) => {\n      el.target.closest('.information-children').classList.remove('select');\n   });\n});\n\n\n\ninformationRow.addEventListener('dragover', (el) => {\n   el.preventDefault();\n});\n\ninformationRow.addEventListener('dragenter', (el) => {\n   let elementEnter = el.target.closest('.information-children');\n   let activeElement = document.querySelector('.select');\n\n   if (elementEnter !== null) {\n      elementEnter.after(activeElement);\n   }\n})\n"]}